*{
    margin: 0;
}

body{
    height: 100vh;
    width: 100vw;
    background: #111;

    display: flex;
    align-items: center;
    justify-content: center;
}

#slider{
    height: 250;
    width: 200px;

    position: relative;
    top: -10%;

    transform-style: preserve-3d;

    /* instead of perspective i used transform perspective as
    perspective is applied at lense and not to the element itself where as
    transform perspective is applied the element itself
    */
    transform: perspective(1000px) rotateX(-10deg);

    transition: all 0.5s ease;
    animation: auto-rotate 15s linear infinite;
}

@keyframes auto-rotate {
    from{
        transform: perspective(1000px) rotateX(-10deg) rotateY(0deg);
    }to{
        transform: perspective(1000px) rotateX(-10deg) rotateY(360deg);
    }
}

.slider-item{
    height: 250px;
    width: 200px;
    opacity: 0.7;
    border-radius: 10px;
    /* border: 2px solid white; */
    
    position: absolute;
    transform: rotateY(calc((var(--position) - 1) * (360/var(--totalItems)) * 1deg)) translateZ(450px);
}

#content{
    color: white;
    position: absolute;
    width: 600px;
    top: -15px;
    left: calc(50% - 300px);
    animation: not-rotate 15s linear infinite reverse;
}

@keyframes not-rotate {
    from{
        transform: rotateY(0deg);
    }to{
        transform: rotateY(360deg);
    }
}

#content h1{
    font-size: 70px;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

#content span{
    font-size: 18px;
    font-family: 'Courier New', Courier, monospace;
}